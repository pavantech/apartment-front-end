{"ast":null,"code":"var _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/customToolbar/NotificationCustomToolbar.js\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst defaultToolbarStyles = {\n  iconButton: {}\n};\n\nclass CustomToolbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      this.props.displayAddMembers();\n    };\n\n    this.fetchData = () => {\n      fetch(\"......./suggestions/random\", {\n        method: \"GET\",\n        dataType: \"JSON\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      }).then(resp => {\n        return resp.json();\n      }).then(data => {\n        this.setState({\n          suggestion: data.suggestion\n        });\n      }).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Import\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      onClick: this.props.displayImportInventoryModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SaveIcon, {\n      className: classes.saveIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withStyles(defaultToolbarStyles, {\n  name: \"NotificationCustomToolbar\"\n})(CustomToolbar);","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/customToolbar/NotificationCustomToolbar.js"],"names":["React","IconButton","Tooltip","AddIcon","SaveIcon","EditIcon","withStyles","defaultToolbarStyles","iconButton","CustomToolbar","Component","handleClick","props","displayAddMembers","fetchData","fetch","method","dataType","headers","then","resp","json","data","setState","suggestion","catch","error","console","log","render","classes","displayImportInventoryModal","saveIcon","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA7B;;AAIA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAC1CC,WAD0C,GAC5B,MAAM;AAClB,WAAKC,KAAL,CAAWC,iBAAX;AACD,KAHyC;;AAAA,SAI1CC,SAJ0C,GAI9B,MAAM;AAClBC,MAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,QAAAA,MAAM,EAAE,KAD0B;AAElCC,QAAAA,QAAQ,EAAE,MAFwB;AAGlCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHyB,OAA/B,CAAL,CAOCC,IAPD,CAOOC,IAAD,IAAU;AACd,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OATD,EAUCF,IAVD,CAUOG,IAAD,IAAU;AACd,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEF,IAAI,CAACE;AAAnB,SAAd;AACD,OAZD,EAaCC,KAbD,CAaQC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,gBAAnB;AACD,OAfD;AAgBD,KArB2C;AAAA;;AAuB1CG,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKlB,KADlB,CACCkB,OADD;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBD,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEA,OAAO,CAACtB,UADrB;AAEE,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWmB,2BAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAED,OAAO,CAACE,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADL,CAjBC,CADF;AA4BD;;AAtDyC;;AAyD5C,eAAe1B,UAAU,CAACC,oBAAD,EAAuB;AAAE0B,EAAAA,IAAI,EAAE;AAAR,CAAvB,CAAV,CACbxB,aADa,CAAf","sourcesContent":["import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst defaultToolbarStyles = {\n  iconButton: {}\n};\n\nclass CustomToolbar extends React.Component {\n  handleClick = () => {\n    this.props.displayAddMembers();\n  };\n  fetchData = () => {\n  fetch(\"......./suggestions/random\", {\n    method: \"GET\",\n    dataType: \"JSON\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    }\n  })\n  .then((resp) => {\n    return resp.json()\n  }) \n  .then((data) => {\n    this.setState({ suggestion: data.suggestion })                    \n  })\n  .catch((error) => {\n    console.log(error, \"catch the hoop\")\n  })\n}\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        {/*<Tooltip title={\"Add\"}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={this.props.displayAddMembers}\n          >\n            <AddIcon className={classes.deleteIcon} />\n          </IconButton>\n        </Tooltip>\n        {/*<Tooltip title={\"Edit\"}>\n          <IconButton\n            onClick={this.props.displayUpdateInventoryModal}\n            className={classes.iconButton}\n          >\n            <EditIcon className={classes.editIcon} />\n          </IconButton>\n        </Tooltip>*/}\n     <Tooltip title={\"Import\"}>\n          <IconButton\n            className={classes.iconButton}\n            onClick={this.props.displayImportInventoryModal}\n          >\n            <SaveIcon className={classes.saveIcon} />\n          </IconButton>\n        </Tooltip>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(defaultToolbarStyles, { name: \"NotificationCustomToolbar\" })(\n  CustomToolbar\n);\n"]},"metadata":{},"sourceType":"module"}