{"ast":null,"code":"import _slicedToArray from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/pages/Home.js\";\nimport React, { useState, useEffect } from \"react\"; /// import DatePicker from \"../datePicker/DatePicker\";\n\nimport * as moment from 'moment';\nimport { ScaleLoader } from 'react-spinners';\nimport MUIDataTable from \"mui-datatables\";\nimport clsx from \"clsx\";\nimport { makeStyles, withTheme, useTheme, withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Button from \"@material-ui/core/Button\";\nimport AddMembers from \"../addMembers/AddMembers\";\nimport ImportInventoryModal from \"../importInventoryModal/ImportInventoryModal\";\nimport UpdateInventoryModal from \"../updateInventoryModal/UpdateInventoryModal\";\nimport AppMenu from \"../sidebar/AppMenu\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CustomToolbar from \"../customToolbar/CustomToolbar\";\nimport CustomToolbarSelect from \"../customToolbar/CustomToolbarSelect\";\nimport BulkUpdateInventoryModal from \"../bulkUpdateInventoryModal/BulkUpdateInventoryModal\";\nimport { TableCell } from \"@material-ui/core\";\nconst style = {\n  position: \"sticky\",\n  left: 0,\n  background: \"white\",\n  zIndex: 101,\n  width: \"200px\"\n};\nconst style2 = {\n  position: \"sticky\",\n  left: \"350px\",\n  background: \"white\",\n  zIndex: 999\n};\nconst drawerWidth = 240;\n\nconst getMuiTheme = () => createMuiTheme({\n  overrides: {\n    MuiToolbar: {\n      regular: {\n        minHeight: \"48px !important\"\n      }\n    },\n    MuiPaper: {\n      root: {\n        width: \"97vw\",\n        overflow: \"auto\"\n      }\n    },\n    MuiCheckbox: {\n      root: {\n        padding: \"5px !important\"\n      }\n    },\n    MuiIconButton: {\n      root: {\n        padding: \"5px !important\"\n      }\n    },\n    MuiTableCell: {\n      head: {\n        background: \"#3f51b5 !important\",\n        color: \"#fff\",\n        padding: \"5px !important\"\n      },\n      body: {\n        padding: \"5px !important\",\n        margin: 0,\n        width: \"auto !important\",\n        whiteSpace: \"nowrap\"\n      }\n    },\n    MuiMenu: {\n      paper: {\n        width: \"auto\"\n      }\n    },\n    MUIDataTableHeadCell: {\n      root: {\n        fontSize: \"12px\",\n        padding: \"8px\",\n        background: \"red\"\n      }\n    },\n    MUIDataTableBodyCell: {\n      root: {\n        fontSize: \"12px\",\n        padding: \"8px\"\n      }\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: _objectSpread({\n    background: \"#3f51b5\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar, {\n    justifyContent: \"flex-end\",\n    minHeight: \"48px !important\"\n  }),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  overlay: {\n    position: 'fixed',\n    width: '100vw',\n    height: '100vh',\n    zIndex: '99999',\n    top: 0,\n    left: 0,\n    background: 'rgba(0,0,0,.5)'\n  },\n  loader: {\n    position: 'fixed',\n    zIndex: '999999',\n    top: \"50vh\",\n    left: '50vw',\n    transform: 'translate(-50%, -50%)'\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n/*function App() {\r\n  return (\r\n   <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 id='title'>React Dynamic Table</h1>\r\n            <table id='students'>\r\n               <tbody>\r\n                  <tr>{this.renderTableHeader()}</tr>\r\n                  {this.renderTableData()}\r\n               </tbody>\r\n            </table>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n*/\n\nexport default function Home(props) {\n  let selectedRowIndx = null;\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loader = _useState2[0],\n        setLoader = _useState2[1];\n\n  const _useState3 = useState({\n    addMembers: false,\n    importInventoryModal: false,\n    updateInventoryModal: false,\n    bulkUpdateInventoryModal: false,\n    open: false,\n    selectedRowIndx: null,\n    todos: [],\n    rows: [],\n    tableData: {\n      columns: [{\n        name: \"\",\n        options: {\n          filter: false,\n          sort: false,\n          empty: true,\n          customBodyRender: (value, tableMeta, updateValue) => {\n            return React.createElement(IconButton, {\n              color: \"inherit\",\n              \"aria-label\": \"open drawer\",\n              onClick: () => displayUpdateInventoryModal(tableMeta.rowIndex),\n              edge: \"start\",\n              className: clsx(classes.menuButton, state.open && classes.hide),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 237\n              },\n              __self: this\n            }, React.createElement(EditIcon, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 247\n              },\n              __self: this\n            }));\n          }\n        }\n      }, {\n        name: \"Full NAME\",\n        options: {\n          filter: false,\n          customHeadRender: (a, b) => React.createElement(TableCell, {\n            style: _objectSpread({}, style, {\n              top: 0,\n              left: \"1px\",\n              zIndex: 999,\n              width: \"200px\"\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, \"FULL NAME\"),\n          setCellProps: () => ({\n            style\n          })\n        }\n      }, {\n        name: \"USER NAME\",\n        options: {\n          filter: false\n        }\n      }, \"FLAT NO\", \"EMAIL ID\", \"MOBILE\", \"TYPE\", \"APARTMENTID\"]\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        state = _useState4[0],\n        setState = _useState4[1];\n\n  useEffect(() => {\n    if (state.rows.length === 0) fetchData();\n  });\n\n  const onRowsDelete = param => {\n    console.log(param);\n\n    if (!window.confirm(\"do you want to delete ?\")) {\n      return false;\n    }\n\n    deleteRows(param);\n  };\n\n  const deleteRows = async (rowsDelete, data) => {\n    try {\n      for (let _ref of rowsDelete.data) {\n        let index = _ref.index;\n        console.log(\"print ....... \", index, state.rows[index]);\n        const requestData = {\n          hostName: state.rows[index][0]\n        };\n        const requestOption = {\n          method: \"DELETE\",\n          mode: \"cors\",\n          body: JSON.stringify(requestData),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }; // this.props.history.push(\"/\");\n\n        await fetch(\"//localhost:8081/api/api/delete/\" + state.rows[index][0], requestOption);\n      }\n\n      fetchData();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const options = {\n    filter: true,\n    filterList: [['username']],\n    filterType: \"dropdown\",\n    fixedHeader: true,\n    responsive: \"scroll\",\n    onRowsDelete: onRowsDelete,\n    customToolbar: () => {\n      return React.createElement(CustomToolbar, {\n        displayAddMembers: displayAddMembers,\n        displayImportInventoryModal: displayImportInventoryModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      });\n    },\n    customToolbarSelect: selectedRows => React.createElement(CustomToolbarSelect, {\n      selectedRows: selectedRows,\n      onRowsDelete: () => onRowsDelete(selectedRows),\n      displayBulkUpdateInventoryModal: () => displayBulkUpdateInventoryModal(selectedRows),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })\n  }; //   flushRowsSelected={this.flushRowsSelected}\n  // setSome={this.setSome}\n\n  const logout = () => {\n    fetch(\"http://localhost:8081/api/api/logout\").then(res => res.json()).then(data => {\n      // .table(data);\n      if (data && data.status && data.status.indexOf('sucess') > -1) {\n        props.history.push('/');\n      }\n    });\n  };\n\n  const fetchData = () => {\n    const data = [];\n    state.rows = [];\n    fetch(\"http://localhost:5000/api/userList\").then(res => res.json()).then(data => {\n      // .table(data); \n      if (data && data.status && data.status.indexOf('Redirect to login page') > -1) {\n        props.history.push('/');\n      } else if (data.length === 0) {\n        setLoader(false);\n        return null;\n      }\n\n      console.log(data);\n\n      for (let _ref2 of data) {\n        let fullName = _ref2.fullName;\n        let username = _ref2.username;\n        let flatNo = _ref2.flatNo;\n        let emailId = _ref2.emailId;\n        let mobile = _ref2.mobile;\n        let type = _ref2.type;\n        let apartmentId = _ref2.apartmentId;\n        state.rows.push([fullName || \"\", username || \"\", flatNo || \"\", emailId || \"\", mobile || \"\", type || \"\", apartmentId || \"\"]);\n      }\n\n      setState({\n        todos: data,\n        rows: [...state.rows],\n        tableData: _objectSpread({}, state.tableData)\n      });\n      setLoader(false);\n      console.log(JSON.stringify(state.rows));\n    }).catch(e => console.log(e));\n    /*\r\n    setState({\r\n    rows: [...statsse.rows],\r\n    tableData: { ...state.tableData }\r\n    });*/\n  };\n\n  const handleDrawerOpen = () => {\n    setState(_objectSpread({}, state, {\n      open: true\n    }));\n  };\n\n  const handleDrawerClose = () => {\n    setState(_objectSpread({}, state, {\n      open: false\n    }));\n  };\n\n  const displayAddMembers = () => {\n    setState(_objectSpread({}, state, {\n      addMembers: true\n    }));\n  };\n\n  const displayImportInventoryModal = () => {\n    setState(_objectSpread({}, state, {\n      importInventoryModal: true\n    }));\n  };\n\n  const displayUpdateInventoryModal = rowIndex => {\n    setState(_objectSpread({}, state, {\n      updateInventoryModal: true,\n      selectedRowIndx: rowIndex\n    }));\n  };\n\n  const displayBulkUpdateInventoryModal = selectedRows => {\n    console.log(\"print selectedRows \", selectedRows);\n    setState(_objectSpread({}, state, {\n      bulkUpdateInventoryModal: true,\n      selectedRows\n    }));\n  };\n\n  const hideAddMembers = () => {\n    setState(_objectSpread({}, state, {\n      addMembers: false\n    }));\n    fetchData();\n  };\n\n  const hideImportInventoryModal = () => {\n    setState(_objectSpread({}, state, {\n      importInventoryModal: false\n    }));\n    fetchData();\n  };\n\n  const hideUpdateInventoryModal = () => {\n    setState(_objectSpread({}, state, {\n      updateInventoryModal: false\n    }));\n    fetchData();\n  };\n\n  const hideBulkUpdateInventoryModal = () => {\n    setState(_objectSpread({}, state, {\n      bulkUpdateInventoryModal: false\n    }));\n    fetchData();\n  };\n\n  const classes = useStyles();\n  const theme = useTheme();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: state.open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    edge: \"start\",\n    className: clsx(classes.menuButton, state.open && classes.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    style: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  }, \"Inventory Dashboard\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }, window.localStorage && window.localStorage.getItem('username'), \" \"), React.createElement(Button, {\n    color: \"inherit\",\n    style: {\n      float: \"right\"\n    },\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503\n    },\n    __self: this\n  }, \"Logout\"))), React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: state.open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }, theme.direction === \"ltr\" ? React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525\n    },\n    __self: this\n  }) : React.createElement(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531\n    },\n    __self: this\n  }), React.createElement(AppMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: clsx(classes.content, {\n      [classes.contentShift]: state.open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534\n    },\n    __self: this\n  }, React.createElement(AddMembers, {\n    handleClose: hideAddMembers,\n    show: state.addMembers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539\n    },\n    __self: this\n  }), React.createElement(ImportInventoryModal, {\n    handleClose: hideImportInventoryModal,\n    show: state.importInventoryModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543\n    },\n    __self: this\n  }), state.updateInventoryModal && React.createElement(UpdateInventoryModal, {\n    handleClose: hideUpdateInventoryModal,\n    show: state.updateInventoryModal,\n    rowData: state.rows[state.selectedRowIndx],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548\n    },\n    __self: this\n  }), state.bulkUpdateInventoryModal && React.createElement(BulkUpdateInventoryModal, {\n    handleClose: hideBulkUpdateInventoryModal,\n    show: state.bulkUpdateInventoryModal,\n    selectedRows: state.selectedRows.data.map(el => state.rows[el.dataIndex][0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561\n    },\n    __self: this\n  }, loader && React.createElement(\"div\", {\n    className: classes.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563\n    },\n    __self: this\n  }, React.createElement(ScaleLoader, {\n    size: 150 // or 150px\n    ,\n    color: '#123abc',\n    loading: loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565\n    },\n    __self: this\n  }))), React.createElement(MuiThemeProvider, {\n    theme: getMuiTheme(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, {\n    title: \"OWNER INFORMATTION\",\n    data: state.rows,\n    columns: state.tableData.columns,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574\n    },\n    __self: this\n  })))));\n} // export default withTheme(withStyles(useStyles)(Home));","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/pages/Home.js"],"names":["React","useState","useEffect","moment","ScaleLoader","MUIDataTable","clsx","makeStyles","withTheme","useTheme","withStyles","Drawer","CssBaseline","AppBar","Toolbar","List","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","Button","AddMembers","ImportInventoryModal","UpdateInventoryModal","AppMenu","createMuiTheme","MuiThemeProvider","EditIcon","CustomToolbar","CustomToolbarSelect","BulkUpdateInventoryModal","TableCell","style","position","left","background","zIndex","width","style2","drawerWidth","getMuiTheme","overrides","MuiToolbar","regular","minHeight","MuiPaper","root","overflow","MuiCheckbox","padding","MuiIconButton","MuiTableCell","head","color","body","margin","whiteSpace","MuiMenu","paper","MUIDataTableHeadCell","fontSize","MUIDataTableBodyCell","useStyles","theme","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","button","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","overlay","height","top","loader","transform","contentShift","Home","props","selectedRowIndx","setLoader","addMembers","importInventoryModal","updateInventoryModal","bulkUpdateInventoryModal","open","todos","rows","tableData","columns","name","options","filter","sort","empty","customBodyRender","value","tableMeta","updateValue","displayUpdateInventoryModal","rowIndex","classes","state","customHeadRender","a","b","setCellProps","setState","length","fetchData","onRowsDelete","param","console","log","window","confirm","deleteRows","rowsDelete","data","index","requestData","hostName","requestOption","method","mode","JSON","stringify","headers","fetch","err","filterList","filterType","fixedHeader","responsive","customToolbar","displayAddMembers","displayImportInventoryModal","customToolbarSelect","selectedRows","displayBulkUpdateInventoryModal","logout","then","res","json","status","indexOf","history","push","fullName","username","flatNo","emailId","mobile","type","apartmentId","catch","e","handleDrawerOpen","handleDrawerClose","hideAddMembers","hideImportInventoryModal","hideUpdateInventoryModal","hideBulkUpdateInventoryModal","localStorage","getItem","float","direction","map","el","dataIndex","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n/// import DatePicker from \"../datePicker/DatePicker\";\r\nimport * as moment from 'moment';\r\nimport { ScaleLoader } from 'react-spinners';\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  withTheme,\r\n  useTheme,\r\n  withStyles\r\n} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddMembers from \"../addMembers/AddMembers\";\r\nimport ImportInventoryModal from \"../importInventoryModal/ImportInventoryModal\";\r\nimport UpdateInventoryModal from \"../updateInventoryModal/UpdateInventoryModal\";\r\nimport AppMenu from \"../sidebar/AppMenu\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CustomToolbar from \"../customToolbar/CustomToolbar\";\r\nimport CustomToolbarSelect from \"../customToolbar/CustomToolbarSelect\";\r\nimport BulkUpdateInventoryModal from \"../bulkUpdateInventoryModal/BulkUpdateInventoryModal\";\r\nimport { TableCell } from \"@material-ui/core\";\r\n\r\nconst style = {\r\n  position: \"sticky\",\r\n  left: 0,\r\n  background: \"white\",\r\n  zIndex: 101,\r\n  width: \"200px\"\r\n};\r\n\r\nconst style2 = {\r\n  position: \"sticky\",\r\n  left: \"350px\",\r\n  background: \"white\",\r\n  zIndex: 999\r\n};\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst getMuiTheme = () =>\r\n  createMuiTheme({\r\n    overrides: {\r\n      MuiToolbar: {\r\n        regular: {\r\n          minHeight: \"48px !important\"\r\n        }\r\n      },\r\n      MuiPaper: {\r\n        root: {\r\n          width: \"97vw\",\r\n          overflow: \"auto\"\r\n        }\r\n      },\r\n      MuiCheckbox: {\r\n        root: {\r\n          padding: \"5px !important\"\r\n        }\r\n      },\r\n      MuiIconButton: {\r\n        root: {\r\n          padding: \"5px !important\"\r\n        }\r\n      },\r\n      MuiTableCell: {\r\n        head: {\r\n          background: \"#3f51b5 !important\",\r\n          color: \"#fff\",\r\n          padding: \"5px !important\",\r\n        \r\n          \r\n        },\r\n        body: {\r\n          padding: \"5px !important\",\r\n          margin: 0,\r\n          width: \"auto !important\",\r\n          whiteSpace: \"nowrap\"\r\n\r\n        }\r\n      },\r\n      MuiMenu: {\r\n        paper: {\r\n          width: \"auto\"\r\n        }\r\n      },\r\n\r\n      MUIDataTableHeadCell: {\r\n        root: {\r\n          fontSize: \"12px\",\r\n          padding: \"8px\",\r\n          background: \"red\"\r\n        }\r\n      },\r\n      MUIDataTableBodyCell: {\r\n        root: {\r\n          fontSize: \"12px\",\r\n          padding: \"8px\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    \r\n    background: \"#3f51b5\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    minHeight: \"48px !important\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  overlay: {\r\n    position: 'fixed',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex:  '99999',\r\n    top: 0,\r\n    left: 0,\r\n    background: 'rgba(0,0,0,.5)'\r\n  },\r\n  loader: {\r\n    position: 'fixed',\r\n    zIndex: '999999',\r\n    top: \"50vh\",\r\n    left: '50vw',\r\n    transform: 'translate(-50%, -50%)'\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n\r\n}));\r\n\r\n/*function App() {\r\n  return (\r\n   <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 id='title'>React Dynamic Table</h1>\r\n            <table id='students'>\r\n               <tbody>\r\n                  <tr>{this.renderTableHeader()}</tr>\r\n                  {this.renderTableData()}\r\n               </tbody>\r\n            </table>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nexport default function Home(props) {\r\n \r\n\r\n  let selectedRowIndx = null;\r\n  const [loader, setLoader] = useState(true);\r\n  const [state, setState] = useState({\r\n  \r\n    addMembers: false,\r\n    importInventoryModal: false,\r\n    updateInventoryModal: false,\r\n    bulkUpdateInventoryModal:false,\r\n    open: false,\r\n    selectedRowIndx: null,\r\n    todos: [],\r\n    rows: [],\r\n    tableData: {\r\n      columns: [\r\n        {\r\n          name: \"\",\r\n          options: {\r\n            filter: false,\r\n            sort: false,\r\n            empty: true,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              return (\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={() => displayUpdateInventoryModal(tableMeta.rowIndex)}\r\n                  edge=\"start\"\r\n                  className={clsx(\r\n                    classes.menuButton,\r\n                    state.open && classes.hide\r\n                  )}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n              );\r\n            }\r\n          }\r\n        },\r\n        {\r\n          name: \"Full NAME\",\r\n          options: {\r\n            filter: false,\r\n            customHeadRender: (a, b) => (\r\n              <TableCell\r\n                style={{\r\n                  ...style,\r\n                  top: 0,\r\n                  left: \"1px\",\r\n                  zIndex: 999,\r\n                  width: \"200px\"\r\n                }}\r\n              >\r\n                FULL NAME\r\n              </TableCell>\r\n            ),\r\n            setCellProps: () => ({ style })\r\n          }\r\n        },\r\n        {\r\n          name: \"USER NAME\",\r\n          options: {\r\n            filter: false\r\n          },\r\n        }, \r\n        \"FLAT NO\",\r\n        \"EMAIL ID\",\r\n        \"MOBILE\",\r\n        \"TYPE\",\r\n        \"APARTMENTID\"\r\n      ]\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (state.rows.length === 0) fetchData();\r\n  });\r\n\r\n  const onRowsDelete = param => {\r\n    console.log(param)\r\n    if (!window.confirm(\"do you want to delete ?\")) {\r\n      return false;\r\n    }\r\n\r\n    deleteRows(param);\r\n  };\r\n  \r\n  const deleteRows = async (rowsDelete, data) => {\r\n    try {\r\n      for (let { index } of rowsDelete.data) {\r\n        console.log(\"print ....... \", index, state.rows[index]);\r\n\r\n        const requestData = {\r\n          hostName: state.rows[index][0]\r\n        };\r\n\r\n        const requestOption = {\r\n          method: \"DELETE\",\r\n          mode: \"cors\",\r\n          body: JSON.stringify(requestData),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        };\r\n        // this.props.history.push(\"/\");\r\n        await fetch(\r\n          \"//localhost:8081/api/api/delete/\" + state.rows[index][0],\r\n          requestOption\r\n        );\r\n      }\r\n\r\n      fetchData();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    filter: true,\r\n    filterList: [['username']],\r\n    filterType: \"dropdown\",\r\n    fixedHeader: true,\r\n    responsive: \"scroll\",\r\n    onRowsDelete: onRowsDelete,\r\n    customToolbar: () => {\r\n      return (\r\n        <CustomToolbar\r\n          displayAddMembers={displayAddMembers}\r\n          displayImportInventoryModal={displayImportInventoryModal}\r\n        />\r\n      );\r\n  },\r\n  customToolbarSelect: selectedRows => (\r\n    <CustomToolbarSelect\r\n      selectedRows={selectedRows}\r\n      onRowsDelete={() => onRowsDelete(selectedRows)}\r\n      displayBulkUpdateInventoryModal={() =>\r\n        displayBulkUpdateInventoryModal(selectedRows)\r\n      }\r\n    />\r\n  )\r\n};\r\n\r\n//   flushRowsSelected={this.flushRowsSelected}\r\n// setSome={this.setSome}\r\n  const logout = () => {\r\n    fetch(\"http://localhost:8081/api/api/logout\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // .table(data);\r\n      if(data && data.status &&  data.status.indexOf('sucess') > -1) {\r\n         props.history.push('/')\r\n      }\r\n    });\r\n  }\r\n\r\n  const fetchData = () => {\r\n    \r\n    const data = [];\r\n    state.rows = [];\r\n    fetch(\"http://localhost:5000/api/userList\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // .table(data); \r\n      if(data && data.status &&  data.status.indexOf('Redirect to login page') > -1) {\r\n         props.history.push('/')\r\n      }\r\n      else if(data.length === 0) {\r\n        setLoader(false);\r\n        return null;\r\n      }\r\n    console.log(data)\r\n    for (let {\r\n      fullName,\r\n      username,\r\n      flatNo,\r\n      emailId,\r\n      mobile,\r\n      type,\r\n      apartmentId\r\n    } of data) {\r\n      state.rows.push([\r\n        fullName || \"\",\r\n        username || \"\",\r\n        flatNo || \"\",\r\n        emailId || \"\",\r\n        mobile || \"\",\r\n        type || \"\",\r\n        apartmentId || \"\"\r\n      ]);\r\n    }\r\n          setState({\r\n          todos: data,\r\n          rows: [...state.rows],\r\n          tableData: { ...state.tableData },\r\n        });\r\n        setLoader(false);\r\n        console.log(JSON.stringify(state.rows));\r\n      })\r\n      .catch(e => console.log(e));\r\n      \r\n      /*\r\n\r\n    setState({\r\n      rows: [...statsse.rows],\r\n      tableData: { ...state.tableData }\r\n    });*/\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setState({ ...state, open: true });\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setState({ ...state, open: false });\r\n  };\r\n\r\n  const displayAddMembers = () => {\r\n    setState({ ...state, addMembers: true });\r\n  };\r\n\r\n  const displayImportInventoryModal = () => {\r\n    setState({ ...state, importInventoryModal: true });\r\n  };\r\n\r\n  const displayUpdateInventoryModal = rowIndex => {\r\n    setState({\r\n      ...state,\r\n      updateInventoryModal: true,\r\n      selectedRowIndx: rowIndex\r\n    \r\n    });\r\n  };\r\n  const displayBulkUpdateInventoryModal = selectedRows => {\r\n    console.log(\"print selectedRows \", selectedRows);\r\n    setState({\r\n      ...state,\r\n      bulkUpdateInventoryModal: true,\r\n      selectedRows\r\n    });\r\n  };\r\n\r\n\r\n  const hideAddMembers = () => {\r\n    setState({ ...state, addMembers: false });\r\n    fetchData();\r\n  };\r\n\r\n  const hideImportInventoryModal = () => {\r\n    setState({ ...state, importInventoryModal: false });\r\n    fetchData();\r\n  };\r\n\r\n  const hideUpdateInventoryModal = () => {\r\n    setState({ ...state, updateInventoryModal: false });\r\n    fetchData();\r\n  };\r\n\r\n  const hideBulkUpdateInventoryModal = () => {\r\n    setState({ ...state, bulkUpdateInventoryModal: false });\r\n    fetchData();\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: state.open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, state.open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{ flexGrow: 1 }}>\r\n            Inventory Dashboard\r\n          </Typography>\r\n          <span>{ window.localStorage && window.localStorage.getItem('username')} </span>\r\n          <Button\r\n            color=\"inherit\"\r\n            style={{ float: \"right\" }}\r\n            onClick={logout}\r\n            \r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={state.open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <AppMenu />\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: state.open\r\n        })}\r\n      >\r\n        <AddMembers\r\n          handleClose={hideAddMembers}\r\n          show={state.addMembers}\r\n        />\r\n        <ImportInventoryModal\r\n          handleClose={hideImportInventoryModal}\r\n          show={state.importInventoryModal}\r\n        />\r\n        {state.updateInventoryModal && \r\n          <UpdateInventoryModal\r\n            handleClose={hideUpdateInventoryModal}\r\n            show={state.updateInventoryModal}\r\n            rowData={state.rows[state.selectedRowIndx]}\r\n          />\r\n        }\r\n        {state.bulkUpdateInventoryModal && \r\n          <BulkUpdateInventoryModal\r\n            handleClose={hideBulkUpdateInventoryModal}\r\n            show={state.bulkUpdateInventoryModal}\r\n            selectedRows={state.selectedRows.data.map(el => state.rows[el.dataIndex][0])}\r\n          />\r\n        }\r\n        <div style={{ marginTop: \"50px\" }}>\r\n          {loader && <div className={classes.overlay}>\r\n            <div className={classes.loader}>\r\n\r\n              <ScaleLoader\r\n                size={150} // or 150px\r\n                color={'#123abc'}\r\n                loading={loader}\r\n              />\r\n            </div>\r\n          </div>}\r\n          \r\n          <MuiThemeProvider theme={getMuiTheme()}>\r\n            <MUIDataTable\r\n              title={\"OWNER INFORMATTION\"}\r\n              data={state.rows}\r\n              columns={state.tableData.columns}\r\n              options={options}\r\n            />\r\n          </MuiThemeProvider>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n// export default withTheme(withStyles(useStyles)(Home));\r\n"]},"metadata":{},"sourceType":"module"}