{"ast":null,"code":"import _objectSpread from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/bulkUpdateInventoryModal/BulkUpdateInventoryModal.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport DatePicker from \"../datePicker/DatePicker\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    height: \"80%\",\n    overflowY: \"scroll\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    marginLeft: \"0px !important\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  selectBox: {\n    width: \"100%\"\n  },\n  datepicker: {\n    width: \"100% !important\"\n  },\n  MuiFormControl: {\n    root: {\n      width: \"100% !important\"\n    },\n    marginDense: {\n      width: \"100% !important\"\n    }\n  }\n}));\nexport default function BulkUpdateInventoryModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loader = _React$useState4[0],\n        setLoader = _React$useState4[1];\n\n  const updateRows = async (rows, requestData) => {\n    try {\n      for (let hostName of rows) {\n        // console.log(\"print ....... \", index, state.rows[index]);\n        // this.props.history.push(\"/\");\n        await fetch(\"//localhost:8081/api/api/bulkUpdate/\" + hostName, requestData);\n      }\n\n      setLoader(false);\n      props.handleClose();\n      setTimeout(() => alert(\"Record Updated Successfully\"), 100); //fetchData();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSubmit = () => {\n    console.log(\"print selected \", props.selectedRows);\n    setLoader(true); // const url = \"//localhost:8081/api/api/bulkUpdate\";\n\n    const requestData = {\n      \"active\": state.active,\n      \"status\": state.status,\n      \"dayOfMonth\": state.dayOfMonth,\n      \"dayOfWeek\": state.dayOfWeek,\n      \"hourStart\": state.hourStart,\n      \"minStart\": state.minStart,\n      \"outageStartDate\": state.outageStartDate,\n      \"outageEndDate\": state.outageEndDate,\n      \"duration\": state.duration,\n      \"validation\": state.validation,\n      \"rebootRequired\": state.rebootRequired\n    };\n    console.log(\"requestta\", requestData);\n    const requestOption = {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify(requestData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    updateRows(props.selectedRows, requestOption); // this.props.history.push(\"/\");\n\n    /*\r\n     fetch(url, requestOption)\r\n      .then((res)=> {\r\n       console.log(\"rpint res\", res);       \r\n       setLoader(false);\r\n       \r\n       props.handleClose();\r\n       setTimeout(() => alert(\"Record Updated Successfully\"), 100);\r\n       \r\n     })\r\n     .catch(err => {\r\n        alert(\"failed to update the record\")\r\n        console.log(err)\r\n    });*/\n  };\n\n  const _React$useState5 = React.useState({\n    hostName: null,\n    active: null,\n    status: null,\n    dayOfMonth: null,\n    dayOfWeek: null,\n    hourStart: null,\n    minStart: null,\n    outageStartTime: null,\n    outageEndTime: null,\n    duration: '',\n    validation: null,\n    rebootRequired: null\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        state = _React$useState6[0],\n        setState = _React$useState6[1];\n\n  const inputLabel = React.useRef(null);\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        labelWidth = _React$useState8[0],\n        setLabelWidth = _React$useState8[1];\n\n  const handleChange = name => event => {\n    let duration = null;\n    let value = null;\n\n    if (name === 'outageStartDate') {\n      duration = new Date(state.outageEndDate) - new Date(event);\n      let outageEndDate = null;\n\n      if (duration < 0) {\n        outageEndDate = event;\n        duration = 0;\n        console.log(\" outageEndDate \", outageEndDate);\n        setState(_objectSpread({}, state, {\n          outageEndDate: outageEndDate\n        }));\n      }\n\n      value = event;\n    } else if (name === 'outageEndDate') {\n      duration = new Date(event) - new Date(state.outageStartDate);\n      value = event;\n    } else if (value === null) {\n      value = event.target.value;\n    }\n\n    setState(_objectSpread({}, state, {\n      [name]: value,\n      duration: duration !== null ? `${Math.floor(duration / 3600000)}hr ${duration % 3600000 / 60000}mins` : state.duration\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: props.show,\n    onClose: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Update Inventory\"), React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Update Inventory Details\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: \"()=> false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"ACTIVE\"), React.createElement(Select, {\n    labelId: \"active\",\n    id: \"active\",\n    value: state.active,\n    onChange: handleChange(\"active\"),\n    labelWidth: 65,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"true\"), React.createElement(MenuItem, {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"false\")))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: \"status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \"STATUS\"), React.createElement(Select, {\n    labelId: \"status\",\n    id: \"status\",\n    value: state.status,\n    onChange: handleChange(\"status\"),\n    labelWidth: 65,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"ready\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"ready\"), React.createElement(MenuItem, {\n    value: \"complete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"complete\")))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    label: \"Outage Start Date\",\n    value: state.outageStartDate,\n    onChange: handleChange(\"outageStartDate\"),\n    className: classes.datepicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    className: classes.datepicker,\n    variant: \"outlined\",\n    margin: \"dense\",\n    label: \"Outage End Date\",\n    minDate: state.outageStartDate,\n    value: state.outageEndDate,\n    onChange: handleChange(\"outageEndDate\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"duration\",\n    label: \"DURATION\",\n    name: \"duration\",\n    autoComplete: \"duration\",\n    autoFocus: true,\n    value: state.duration,\n    onChange: handleChange('duration'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: \"validation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, \"VALIDATION\"), React.createElement(Select, {\n    labelId: \"validation\",\n    id: \"validation\",\n    value: state.validation,\n    onChange: handleChange(\"validation\"),\n    labelWidth: 130,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, \"true\"), React.createElement(MenuItem, {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"false\")))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: \"rebootRequired\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"REBOOT REQUIRED\"), React.createElement(Select, {\n    labelId: \"rebootRequired\",\n    id: \"rebootRequired\",\n    value: state.rebootRequired,\n    onChange: handleChange(\"rebootRequired\"),\n    labelWidth: 130,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, \"true\"), React.createElement(MenuItem, {\n    value: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, \"false\")))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, loader && React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, \"submit\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    margin: \"dense\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Cancel\")))))));\n}","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/bulkUpdateInventoryModal/BulkUpdateInventoryModal.js"],"names":["React","Button","makeStyles","Modal","TextField","Grid","InputLabel","FormHelperText","FormControl","Select","NativeSelect","MenuItem","DateTimePicker","DatePicker","CircularProgress","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","height","overflowY","container","display","flexWrap","textField","marginLeft","marginRight","dense","marginTop","formControl","margin","minWidth","selectEmpty","selectBox","datepicker","MuiFormControl","root","marginDense","BulkUpdateInventoryModal","props","classes","useState","modalStyle","loader","setLoader","updateRows","rows","requestData","hostName","fetch","handleClose","setTimeout","alert","err","console","log","onSubmit","selectedRows","state","active","status","dayOfMonth","dayOfWeek","hourStart","minStart","outageStartDate","outageEndDate","duration","validation","rebootRequired","requestOption","method","mode","body","JSON","stringify","headers","outageStartTime","outageEndTime","setState","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","name","event","value","Date","target","floor","show","form","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport DatePicker from \"../datePicker/DatePicker\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    height: \"80%\",\r\n    overflowY: \"scroll\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    marginLeft: \"0px !important\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  selectBox: {\r\n    width: \"100%\"\r\n  },\r\n  datepicker: {\r\n    width: \"100% !important\"\r\n  },\r\n  MuiFormControl: {\r\n    root: {\r\n      width: \"100% !important\"\r\n    },\r\n    marginDense: {\r\n      width: \"100% !important\", \r\n    }\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function BulkUpdateInventoryModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [loader, setLoader] = React.useState(false);\r\n\r\n  const updateRows = async (rows, requestData) => {\r\n    try {\r\n      for (let hostName of rows) {\r\n        // console.log(\"print ....... \", index, state.rows[index]);\r\n\r\n       \r\n\r\n        \r\n        // this.props.history.push(\"/\");\r\n        await fetch(\r\n          \"//localhost:8081/api/api/bulkUpdate/\" + hostName,\r\n          requestData\r\n        );\r\n      }\r\n        setLoader(false);\r\n       \r\n       props.handleClose();\r\n       setTimeout(() => alert(\"Record Updated Successfully\"), 100);\r\n      //fetchData();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  const onSubmit = () => {   \r\n    console.log(\"print selected \", props.selectedRows);\r\n    setLoader(true);\r\n    // const url = \"//localhost:8081/api/api/bulkUpdate\";\r\n    const requestData = {\r\n        \r\n        \r\n        \"active\" : state.active,\r\n        \"status\" : state.status,\r\n        \"dayOfMonth\" :state.dayOfMonth,\r\n        \"dayOfWeek\" : state.dayOfWeek,\r\n        \"hourStart\" : state.hourStart,\r\n        \"minStart\" : state.minStart,\r\n        \"outageStartDate\": state.outageStartDate,\r\n        \"outageEndDate\": state.outageEndDate,\r\n        \"duration\" : state.duration,\r\n        \"validation\" : state.validation,\r\n        \"rebootRequired\" : state.rebootRequired\r\n    };\r\n\r\n    console.log(\"requestta\", requestData);\r\n    const requestOption = {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(requestData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n\r\n    updateRows(props.selectedRows, requestOption);\r\n    // this.props.history.push(\"/\");\r\n    /*\r\n     fetch(url, requestOption)\r\n      .then((res)=> {\r\n       console.log(\"rpint res\", res);       \r\n       setLoader(false);\r\n       \r\n       props.handleClose();\r\n       setTimeout(() => alert(\"Record Updated Successfully\"), 100);\r\n       \r\n     })\r\n     .catch(err => {\r\n        alert(\"failed to update the record\")\r\n        console.log(err)\r\n    });*/\r\n  };\r\n\r\n\r\n\r\n  const [state, setState] = React.useState({\r\n    hostName: null,\r\n    active: null,\r\n    status: null,\r\n    dayOfMonth: null,\r\n    dayOfWeek: null,\r\n    hourStart: null,\r\n    minStart: null,\r\n    outageStartTime: null,\r\n    outageEndTime: null,\r\n    duration: '',\r\n    validation: null,\r\n    rebootRequired: null\r\n  });\r\n\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  const handleChange = name => event => {\r\n    let duration = null;\r\n    let value = null;\r\n    if(name === 'outageStartDate'){\r\n      duration = (new Date(state.outageEndDate)) - new Date(event);\r\n      let outageEndDate = null;\r\n      if(duration < 0) {\r\n        outageEndDate = event;\r\n        duration = 0;\r\n        console.log(\" outageEndDate \", outageEndDate);\r\n        setState({\r\n          ...state,\r\n          outageEndDate: outageEndDate\r\n        });\r\n      }\r\n      value = event;\r\n      \r\n    } \r\n    else if(name ==='outageEndDate'){\r\n      duration = new Date(event) - (new Date(state.outageStartDate))\r\n      value = event;\r\n    }\r\n    else if(value === null){\r\n      value = event.target.value;\r\n    }\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n      duration: duration !== null ? `${Math.floor(duration/3600000)}hr ${(duration%3600000)/60000}mins` : state.duration\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.show}\r\n        onClose={props.handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Update Inventory</h2>\r\n          <p id=\"simple-modal-description\">Update Inventory Details</p>\r\n\r\n          <form className={classes.form} noValidate onSubmit=\"()=> false\">\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel ref={inputLabel} id=\"active\">\r\n                      ACTIVE\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"active\"\r\n                      id=\"active\"\r\n                      value={state.active}\r\n                      onChange={handleChange(\"active\")}\r\n                      labelWidth={65}\r\n                    >\r\n                      <MenuItem value={\"true\"}>true</MenuItem>\r\n                      <MenuItem value={\"false\"}>false</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel ref={inputLabel} id=\"status\">\r\n                      STATUS\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"status\"\r\n                      id=\"status\"\r\n                      value={state.status}\r\n                      onChange={handleChange(\"status\")}\r\n                      labelWidth={65}\r\n                    >\r\n                      <MenuItem value={\"ready\"}>ready</MenuItem>\r\n                      <MenuItem value={\"complete\"}>complete</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </Grid>            \r\n              <Grid item xs>\r\n                <DatePicker\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  label=\"Outage Start Date\"\r\n                  value={state.outageStartDate}\r\n                  onChange={handleChange(\"outageStartDate\")}\r\n                  className={classes.datepicker}\r\n                />              \r\n              </Grid> \r\n  \r\n              <Grid item xs>     \r\n                <DatePicker\r\n                  className={classes.datepicker}\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  label=\"Outage End Date\"\r\n                  minDate={state.outageStartDate}\r\n                  value={state.outageEndDate}\r\n                  onChange={handleChange(\"outageEndDate\")} \r\n                /> \r\n              </Grid>            \r\n            </Grid> \r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"duration\"\r\n                  label=\"DURATION\"\r\n                  name=\"duration\"\r\n                  autoComplete=\"duration\"\r\n                  autoFocus\r\n                  value={state.duration}\r\n                  onChange={handleChange('duration')}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel ref={inputLabel} id=\"validation\">\r\n                      VALIDATION\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"validation\"\r\n                      id=\"validation\"\r\n                      value={state.validation}\r\n                      onChange={handleChange(\"validation\")}\r\n                      labelWidth={130}\r\n                    >\r\n                      <MenuItem value={\"true\"}>true</MenuItem>\r\n                      <MenuItem value={\"false\"}>false</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    required\r\n                    fullWidth\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel ref={inputLabel} id=\"rebootRequired\">\r\n                      REBOOT REQUIRED\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"rebootRequired\"\r\n                      id=\"rebootRequired\"\r\n                      value={state.rebootRequired}\r\n                      onChange={handleChange(\"rebootRequired\")}\r\n                      labelWidth={130}\r\n                    >\r\n                      <MenuItem value={\"true\"}>true</MenuItem>\r\n                      <MenuItem value={\"false\"}>false</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n              </Grid>\r\n              <Grid item xs />              \r\n            </Grid>\r\n            <Grid container spacing={6}>\r\n              <Grid item xs />\r\n              <Grid item xs />\r\n              <Grid item xs />\r\n              <Grid item xs>\r\n                {loader && <CircularProgress />}\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button          \r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={onSubmit}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={props.handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid> \r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}