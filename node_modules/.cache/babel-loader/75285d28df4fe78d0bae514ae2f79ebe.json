{"ast":null,"code":"import _slicedToArray from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/importInventoryModal/NotificationImportModal.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    height: \"50%\",\n    overflowY: \"scroll\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  input: {\n    display: \"none\"\n  },\n  loader: {\n    width: \"16px !important\",\n    height: \"16px !important\",\n    marginLeft: \"10px\"\n  }\n}));\nexport default function NotificationImportModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loader = _React$useState4[0],\n        setLoader = _React$useState4[1];\n\n  const onSubmit = () => {\n    setLoader(true);\n    const url = \"//localhost:5000/api/notificationInformation\";\n    const requestData = new FormData();\n    requestData.append(\"file\", state.selectedFile);\n    requestData.append(\"notificationId\", total.notificationId);\n    requestData.append(\"description\", owner.description);\n    console.log(\"requestta\", requestData);\n    const requestOption = {\n      method: \"POST\",\n      mode: \"cors\",\n      body: requestData\n    }; // this.props.history.push(\"/\");\n\n    fetch(url, requestOption).then(res => {\n      console.log(\"print res\", res);\n      setLoader(false);\n      setNotificationId({\n        notificationId: null\n      });\n      setDescription({\n        description: null\n      });\n      setState({\n        selectedFile: null\n      });\n      props.handleClose();\n    }).catch(err => console.log(err));\n  };\n\n  const _React$useState5 = React.useState({\n    selectedFile: null\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        state = _React$useState6[0],\n        setState = _React$useState6[1];\n\n  const _React$useState7 = React.useState({\n    notificationId: \"\"\n  }),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        total = _React$useState8[0],\n        setNotificationId = _React$useState8[1];\n\n  const _React$useState9 = React.useState({\n    description: \"\"\n  }),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        owner = _React$useState10[0],\n        setDescription = _React$useState10[1];\n\n  const inputLabel = React.useRef(null);\n\n  const _React$useState11 = React.useState(0),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        labelWidth = _React$useState12[0],\n        setLabelWidth = _React$useState12[1];\n\n  const handleChange = name => event => {\n    setNotificationId({\n      notificationId: event.target.value\n    });\n  };\n\n  const handleChange2 = name => event => {\n    setDescription({\n      description: event.target.value\n    });\n  };\n\n  const handleChange1 = name => event => {\n    setState({\n      selectedFile: event.target.files[0]\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: props.show,\n    onClose: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"ADD NOTIFICATION INFORMATION\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: () => false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"notificationId\",\n    label: \"Notification Id\",\n    name: \"notificationId\",\n    autoComplete: \"notificationId\",\n    value: state.notificationId,\n    onChange: handleChange(\"notificationId\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextareaAutosize, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    rowsMax: 4,\n    \"aria-label\": \"maximum height\",\n    placeholder: \"Keep null if upload INFORMATION on image\",\n    id: \"description\",\n    label: \"Description\",\n    name: \"description\",\n    autoComplete: \"description\",\n    value: state.description,\n    onChange: handleChange2(\"description\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    accept: \"*/*\",\n    className: classes.input,\n    id: \"outlined-button-file\",\n    type: \"file\",\n    name: \"selectedFile\",\n    onChange: handleChange1(\"selectedFile\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"outlined-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    margin: \"dense\",\n    color: \"primary\",\n    component: \"span\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Choose file\"))), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, total.notificationId && total.notificationId.value, owner.description && owner.description.value, state.selectedFile && state.selectedFile.name, loader && React.createElement(CircularProgress, {\n    className: classes.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    margin: \"dense\",\n    color: \"primary\",\n    className: classes.button,\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }),\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Upload\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    margin: \"dense\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Cancel\")))))));\n}\n/*\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./modal.css\";\nimport \"./App.scss\";\n\nclass ImportInventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    alert(\"A name was submitted: \" + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form class=\"modal-content animate\" onSubmit={this.handleSubmit}>\n        <div class=\"container\">\n          <label for=\"uname\">\n            <b>UPLOAD IVENTORY</b>\n          </label>\n          <input\n            type=\"file\"\n            placeholder=\"Enter Username\"\n            name=\"uname\"\n            required\n          />\n\n          <button type=\"submit\">SUBMIT</button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default ImportInventory;\n*/","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/importInventoryModal/NotificationImportModal.js"],"names":["React","Button","makeStyles","Modal","TextField","TextareaAutosize","Grid","InputLabel","FormHelperText","FormControl","Select","MenuItem","NativeSelect","CircularProgress","CloudUploadIcon","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","height","overflowY","container","display","flexWrap","textField","marginLeft","marginRight","dense","marginTop","formControl","margin","minWidth","selectEmpty","input","loader","NotificationImportModal","props","classes","useState","modalStyle","setLoader","onSubmit","url","requestData","FormData","append","state","selectedFile","total","notificationId","owner","description","console","log","requestOption","method","mode","body","fetch","then","res","setNotificationId","setDescription","setState","handleClose","catch","err","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","name","event","target","value","handleChange2","handleChange1","files","show","form","button","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    height: \"50%\",\n    overflowY: \"scroll\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  input: {\n    display: \"none\"\n  },\n  loader: {\n    width: \"16px !important\",\n    height: \"16px !important\",\n    marginLeft: \"10px\"\n  }\n}));\n\nexport default function NotificationImportModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [loader, setLoader] = React.useState(false);\n\n  const onSubmit = () => {\n    setLoader(true);\n    const url = \"//localhost:5000/api/notificationInformation\";\n    const requestData = new FormData();\n    requestData.append(\"file\", state.selectedFile); \n    requestData.append(\"notificationId\", total.notificationId);\n    requestData.append(\"description\", owner.description);\n    console.log(\"requestta\", requestData);\n    const requestOption = {\n      method: \"POST\",\n      mode: \"cors\",\n      body: requestData\n    };\n    \n    // this.props.history.push(\"/\");\n    fetch(url, requestOption)\n      .then(res => {\n        console.log(\"print res\", res);\n        setLoader(false);\n        setNotificationId({notificationId: null});\n        setDescription({description: null});\n        setState({selectedFile: null});\n        props.handleClose();\n      })\n      .catch(err => console.log(err));\n  };\n  \n  const [state, setState] = React.useState({\n    selectedFile: null\n    \n  });\n  const [total, setNotificationId] = React.useState({notificationId: \"\"});\n  const [owner, setDescription] = React.useState({description: \"\"});\n\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n\n  const handleChange = name => event => {\n    setNotificationId({ notificationId: event.target.value});\n\n  };\n  const handleChange2 = name => event => {\n    setDescription({ description: event.target.value});\n  \n\n  };\n  const handleChange1 = name => event => {\n    setState({ selectedFile: event.target.files[0] });\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={props.show}\n        onClose={props.handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">ADD NOTIFICATION INFORMATION</h2>\n          <form className={classes.form} noValidate onSubmit={() => false}>\n              <Grid container spacing={4}>\n              <Grid item xs>\n                  <TextField\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  required\n                  fullWidth\n                  id=\"notificationId\"\n                  label=\"Notification Id\"\n                  name=\"notificationId\"\n                  autoComplete=\"notificationId\"\n                  value={state.notificationId}\n                  onChange={handleChange(\"notificationId\")}\n                />\n              </Grid>\n              <Grid item xs>\n                  <TextareaAutosize\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  rowsMax={4}\n                  aria-label=\"maximum height\"\n                  placeholder=\"Keep null if upload INFORMATION on image\"\n                  id=\"description\"\n                  label=\"Description\"\n                  name=\"description\"\n                  autoComplete=\"description\"\n                  value={state.description}\n                  onChange={handleChange2(\"description\")}\n                />\n              </Grid>\n              </Grid>\n               <Grid container spacing={4}>\n              <Grid item xs>\n              </Grid>\n\n            </Grid>\n            <Grid container spacing={4}>\n              <Grid item xs>\n                <input\n                  accept=\"*/*\"\n                  className={classes.input}\n                  id=\"outlined-button-file\"\n                  type=\"file\"\n                  name=\"selectedFile\"\n                  onChange={handleChange1(\"selectedFile\")}\n                  \n                />\n                <label htmlFor=\"outlined-button-file\">\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    color=\"primary\"\n                    component=\"span\"\n                    className={classes.button}\n                  >\n                    Choose file\n                  </Button>\n                </label>\n              </Grid>\n              <Grid item xs>\n                {total.notificationId && total.notificationId.value}\n                {owner.description && owner.description.value}\n                {state.selectedFile && state.selectedFile.name}\n                {loader && <CircularProgress className={classes.loader} />}\n              </Grid>\n              <Grid item xs>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<CloudUploadIcon />}\n                  onClick={onSubmit}\n                >\n                  Upload\n                </Button>\n              </Grid>\n\n              <Grid item xs>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={props.handleClose}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\n/*\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./modal.css\";\nimport \"./App.scss\";\n\nclass ImportInventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    alert(\"A name was submitted: \" + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form class=\"modal-content animate\" onSubmit={this.handleSubmit}>\n        <div class=\"container\">\n          <label for=\"uname\">\n            <b>UPLOAD IVENTORY</b>\n          </label>\n          <input\n            type=\"file\"\n            placeholder=\"Enter Username\"\n            name=\"uname\"\n            required\n          />\n\n          <button type=\"submit\">SUBMIT</button>\n        </div>\n      </form>\n    );\n  }\n}\nexport default ImportInventory;\n*/\n"]},"metadata":{},"sourceType":"module"}