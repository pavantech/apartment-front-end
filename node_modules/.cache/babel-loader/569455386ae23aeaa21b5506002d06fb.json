{"ast":null,"code":"import _objectSpread from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/pages/Login.js\";\nimport React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\"; // import {  } from \"@material-ui/styles\";\n\nimport { Redirect } from \"react-router-dom\"; //import logo from \"./.png\";\n\nconst useStyles = theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  logo: {\n    height: \"120px\",\n    position: \"relative\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"80%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}); // const classes = useStyles();\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {\n      const url = \"//localhost:5000/api/login\";\n      const requestOption = {\n        method: \"POST\",\n        mode: \"cors\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      /*fetch(url, requestOption)\n      .then(res => res.json())\n      .then(res => {\n        console.log(\"rpint res\", res);\n        if (res.status !== \"Failed\") {\n          this.setState({ loginSuccess: true });\n        } else {\n          alert(\"login failed\");\n        }\n      })*/\n\n      fetch(url, requestOption).then(res => res.json()).then(res => {\n        console.log(\"rpint res\", res);\n\n        if (res.status === 'Success') {\n          if ('localStorage' in window) {\n            window.localStorage.setItem('username', this.state.username);\n          }\n\n          setTimeout(() => {\n            this.props.history.push('/home'); //this.setState({loginSuccess: true})\n          }, 2000);\n        } else {\n          alert(res.status);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.updateUserDetail = e => {\n      this.setState(_objectSpread({}, this.state, {\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loginSuccess: false\n    };\n  }\n\n  renderRedirect() {\n    if (this.state.loginSuccess) {\n      return React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"LOGO\")), React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h4\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"VNR TOWERS\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: \"()=> false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      label: \"Username\",\n      name: \"username\",\n      autoComplete: \"username\",\n      autoFocus: true,\n      onChange: e => this.updateUserDetail(e),\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: e => this.updateUserDetail(e),\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/forgot\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Forgot Password?\"), React.createElement(Link, {\n      href: \"/register\",\n      variant: \"body2\",\n      style: {\n        margin: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Customer Register?\"))))))));\n  }\n\n}\n\nexport default withStyles(useStyles)(Login);","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/pages/Login.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","withStyles","Container","Redirect","useStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","logo","height","position","top","left","transform","avatar","margin","secondary","main","form","width","submit","Login","Component","constructor","props","onSubmit","url","requestOption","method","mode","JSON","stringify","state","headers","fetch","then","res","json","console","log","status","window","localStorage","setItem","username","setTimeout","history","push","alert","catch","err","updateUserDetail","e","setState","target","name","value","password","loginSuccess","renderRedirect","render","classes","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n// import {  } from \"@material-ui/styles\";\nimport { Redirect } from \"react-router-dom\";\n\n//import logo from \"./.png\";\n\nconst useStyles = theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  logo: {\n    height: \"120px\",\n    position: \"relative\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"80%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\n// const classes = useStyles();\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loginSuccess: false\n    };\n  }\n\n  onSubmit = () => {\n    const url = \"//localhost:5000/api/login\";\n    const requestOption = {\n      method: \"POST\",\n      mode: \"cors\",\n      body: JSON.stringify(this.state),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    /*fetch(url, requestOption)\n    .then(res => res.json())\n    .then(res => {\n      console.log(\"rpint res\", res);\n      if (res.status !== \"Failed\") {\n        this.setState({ loginSuccess: true });\n      } else {\n        alert(\"login failed\");\n      }\n    })*/\n    \n    \n    fetch(url, requestOption)\n      .then(res => res.json())\n      .then(res => {\n        console.log(\"rpint res\", res);\n        if(res.status === 'Success') {\n          if('localStorage' in window) {\n            window.localStorage.setItem('username', this.state.username);\n          }\n          \n          setTimeout(() => {\n          this.props.history.push('/home') \n          //this.setState({loginSuccess: true})\n          }, 2000);\n\n        }\n        else {\n          alert(res.status);\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  updateUserDetail = e => {\n    this.setState({ ...this.state, [e.target.name]: e.target.value });\n  };\n\n  renderRedirect() {\n    if (this.state.loginSuccess) {\n      return <Redirect to=\"/home\" />;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        {this.renderRedirect()}\n        <CssBaseline />\n        <div className={classes.paper}>\n        \n          <Grid container spacing={2}>\n            <Grid item xs>\n              <h1>LOGO</h1>\n            </Grid>\n            <Grid item xs>\n              <Typography\n                component=\"h1\"\n                variant=\"h4\"\n                style={{ textAlign: \"left\" }}\n              >\n                VNR TOWERS\n              </Typography>\n              <form className={classes.form} noValidate onSubmit=\"()=> false\">\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  autoFocus\n                  onChange={e => this.updateUserDetail(e)}\n                  value={this.state.username}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={e => this.updateUserDetail(e)}\n                  value={this.state.password}\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={this.onSubmit}\n                >\n                  Login\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"/forgot\" variant=\"body2\">\n                      Forgot Password?\n                    </Link>\n                    <Link href=\"/register\" variant=\"body2\" style={{ margin: \"50px\"}}>\n                      Customer Register?\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Login);\n"]},"metadata":{},"sourceType":"module"}