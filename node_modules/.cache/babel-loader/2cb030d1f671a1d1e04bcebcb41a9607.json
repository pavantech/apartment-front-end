{"ast":null,"code":"import _objectSpread from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/updateInventoryModal/UpdateInventoryModal.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport DatePicker from \"../datePicker/DatePicker\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    height: \"80%\",\n    overflowY: \"scroll\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    marginLeft: \"0px !important\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  selectBox: {\n    width: \"100%\"\n  },\n  datepicker: {\n    width: \"100% !important\"\n  },\n  loader: {\n    width: \"16px !important\",\n    height: \"16px !important\",\n    marginLeft: \"10px\"\n  },\n  MuiFormControl: {\n    root: {\n      width: \"100% !important\"\n    },\n    marginDense: {\n      width: \"100% !important\"\n    }\n  }\n}));\nexport default function UpdateInventoryModal(props) {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        loader = _React$useState4[0],\n        setLoader = _React$useState4[1];\n\n  const onSubmit = () => {\n    setLoader(true);\n    const url = \"//localhost:5000/api/updateUserRegister\";\n    const requestData = {\n      fullName: state.fullName,\n      username: state.username,\n      password: state.password,\n      flatNo: state.flatNo,\n      emailId: state.emailId,\n      mobile: state.mobile,\n      type: state.type\n    };\n    console.log(\"requestta\", requestData);\n    const requestOption = {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify(requestData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; // this.props.history.push(\"/\");\n\n    fetch(url, requestOption).then(res => {\n      console.log(\"rpint res\", res);\n      setLoader(false);\n      props.handleClose();\n      setTimeout(() => alert(\"Record Updated Successfully\"), 100);\n    }).catch(err => {\n      alert(\"failed to update the record\");\n      console.log(err);\n    });\n  };\n\n  console.log(props.rowData);\n\n  const _React$useState5 = React.useState({\n    fullName: props.rowData ? props.rowData[0] : '',\n    username: props.rowData ? props.rowData[1] : '',\n    password: props.rowData ? props.rowData[7] : '',\n    flatNo: props.rowData ? props.rowData[2] : '',\n    emailId: props.rowData ? props.rowData[3] : '',\n    mobile: props.rowData ? props.rowData[4] : '',\n    type: props.rowData ? props.rowData[5] : ''\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        state = _React$useState6[0],\n        setState = _React$useState6[1];\n  /*console.log(\"outageStartDate\",props.rowData[21] )\r\n  console.log(\"outageEndDate\", props.rowData[22])\r\n  console.log(\"duration\",props.rowData[20])*/\n\n\n  const inputLabel = React.useRef(null);\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        labelWidth = _React$useState8[0],\n        setLabelWidth = _React$useState8[1];\n\n  const handleChange = name => event => {\n    let duration = null;\n    let value = null;\n\n    if (name === 'outageStartDate') {\n      console.log(\"print start date ... \", event);\n      const time = moment(new Date(event)).format(\"YYYY-MM-DD hh:mm:ss\");\n      console.log(\" outageEndDate \", time); // console.log(\" outageEndDate pst\", moment(time, \"YYYY-MM-DD hh:mm:ss\").subtract(8, 'hours').format(\"YYYY-MM-DD hh:mm:ss\"));\n      //debugger;\n\n      console.log(\"local outageEndDate \", new Date(event));\n      duration = moment(state.outageEndDate, 'YYYY-MM-DD hh:mm:ss').toDate() - new Date(event);\n      let outageEndDate = null;\n\n      if (duration < 0) {\n        outageEndDate = event;\n        duration = 0;\n        setState(_objectSpread({}, state, {\n          outageEndDate: outageEndDate\n        }));\n      }\n\n      value = time;\n    } else if (name === 'outageEndDate') {\n      const time = moment(new Date(event)).format(\"YYYY-MM-DD hh:mm:ss\");\n      duration = new Date(event) - moment(state.outageStartDate, 'YYYY-MM-DD hh:mm:ss').toDate();\n      value = time;\n    } else if (value === null) {\n      value = event.target.value;\n    }\n\n    setState(_objectSpread({}, state, {\n      [name]: value,\n      duration: duration !== null ? `${Math.floor(duration / 3600000)}hr ${duration % 3600000 / 60000}mins` : state.duration\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: props.show,\n    onClose: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"simple-modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Update Inventory\"), React.createElement(\"p\", {\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Update Inventory Details\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: \"()=> false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"fullName\",\n    label: \"FULL NAME\",\n    name: \"fullName\",\n    autoComplete: \"fullName\",\n    value: state.fullName,\n    onChange: handleChange(\"fullName\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"USER NAME\",\n    name: \"username\",\n    autoComplete: \"username\",\n    value: state.username,\n    onChange: handleChange(\"username\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    label: \"PASSWORD\",\n    name: \"password\",\n    autoComplete: \"password\",\n    type: \"password\",\n    value: state.password,\n    onChange: handleChange(\"password\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"flatNo\",\n    label: \"FLAT NO\",\n    name: \"flatNo\",\n    autoComplete: \"flatNo\",\n    value: state.flatNo,\n    onChange: handleChange(\"flatNo\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"emailId\",\n    label: \"EMAIL ID\",\n    name: \"emailId\",\n    autoComplete: \"emailId\",\n    value: state.emailId,\n    onChange: handleChange(\"emailId\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    id: \"mobile\",\n    label: \"MOBILE\",\n    name: \"mobile\",\n    autoComplete: \"mobile\",\n    value: state.mobile,\n    onChange: handleChange(\"mobile\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    variant: \"outlined\",\n    margin: \"dense\",\n    required: true,\n    fullWidth: true,\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    ref: inputLabel,\n    id: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"TYPE\"), React.createElement(Select, {\n    labelId: \"type\",\n    id: \"type\",\n    value: state.consoleInfo,\n    onChange: handleChange(\"type\"),\n    labelWidth: 130,\n    marginRight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"OWNER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"OWNER\"), React.createElement(MenuItem, {\n    value: \"PRESIDENT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, \"PRESIDENT\"))))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, loader && React.createElement(CircularProgress, {\n    className: classes.loader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, \"submit\")), React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, React.createElement(Button, {\n    fullWidth: true,\n    margin: \"dense\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"Cancel\")))))));\n}","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/updateInventoryModal/UpdateInventoryModal.js"],"names":["React","Button","makeStyles","Modal","TextField","Grid","InputLabel","FormHelperText","FormControl","Select","NativeSelect","MenuItem","DateTimePicker","DatePicker","CircularProgress","moment","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","height","overflowY","container","display","flexWrap","textField","marginLeft","marginRight","dense","marginTop","formControl","margin","minWidth","selectEmpty","selectBox","datepicker","loader","MuiFormControl","root","marginDense","UpdateInventoryModal","props","classes","useState","modalStyle","setLoader","onSubmit","url","requestData","fullName","state","username","password","flatNo","emailId","mobile","type","console","log","requestOption","method","mode","body","JSON","stringify","headers","fetch","then","res","handleClose","setTimeout","alert","catch","err","rowData","setState","inputLabel","useRef","labelWidth","setLabelWidth","handleChange","name","event","duration","value","time","Date","format","outageEndDate","toDate","outageStartDate","target","floor","show","form","consoleInfo","submit"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport DatePicker from \"../datePicker/DatePicker\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport moment from 'moment';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"80%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    height: \"80%\",\r\n    overflowY: \"scroll\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    marginLeft: \"0px !important\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  selectBox: {\r\n    width: \"100%\"\r\n  },\r\n  datepicker: {\r\n    width: \"100% !important\"\r\n  },\r\n  loader: {\r\n    width: \"16px !important\",\r\n    height: \"16px !important\",\r\n    marginLeft: \"10px\"\r\n  },\r\n  MuiFormControl: {\r\n    root: {\r\n      width: \"100% !important\"\r\n    },\r\n    marginDense: {\r\n      width: \"100% !important\", \r\n    }\r\n  }\r\n}));\r\n\r\nexport default function UpdateInventoryModal(props) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [loader, setLoader] = React.useState(false);\r\n\r\n  const onSubmit = () => {    \r\n    setLoader(true);\r\n    const url = \"//localhost:5000/api/updateUserRegister\";\r\n    const requestData = {\r\n        fullName: state.fullName,\r\n      username: state.username,\r\n      password: state.password,\r\n      flatNo: state.flatNo,\r\n      emailId: state.emailId,\r\n      mobile: state.mobile,\r\n      type: state.type\r\n    };\r\n\r\n    console.log(\"requestta\", requestData);\r\n    const requestOption = {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(requestData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    // this.props.history.push(\"/\");\r\n     fetch(url, requestOption)\r\n      .then((res)=> {\r\n       console.log(\"rpint res\", res);       \r\n       setLoader(false);\r\n       \r\n       props.handleClose();\r\n       setTimeout(() => alert(\"Record Updated Successfully\"), 100);\r\n       \r\n     })\r\n     .catch(err => {\r\n        alert(\"failed to update the record\")\r\n        console.log(err)\r\n    });\r\n  };\r\n\r\n  console.log(props.rowData)\r\n  const [state, setState] = React.useState({\r\n    fullName: props.rowData ? props.rowData[0] : '',\r\n    username: props.rowData ? props.rowData[1] : '',\r\n    password: props.rowData ? props.rowData[7] : '',\r\n    flatNo: props.rowData ? props.rowData[2] : '',\r\n    emailId: props.rowData ? props.rowData[3] : '',\r\n    mobile: props.rowData ? props.rowData[4] : '',\r\n    type: props.rowData ? props.rowData[5] : ''\r\n  });\r\n\r\n  /*console.log(\"outageStartDate\",props.rowData[21] )\r\n  console.log(\"outageEndDate\", props.rowData[22])\r\n  console.log(\"duration\",props.rowData[20])*/\r\n\r\n  const inputLabel = React.useRef(null);\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n\r\n  const handleChange = name => event => {\r\n    let duration = null;\r\n    let value = null;\r\n    if(name === 'outageStartDate') {\r\n      console.log(\"print start date ... \", event);\r\n     \r\n       const time = moment(new Date(event)).format(\"YYYY-MM-DD hh:mm:ss\");\r\n        console.log(\" outageEndDate \", time);\r\n        // console.log(\" outageEndDate pst\", moment(time, \"YYYY-MM-DD hh:mm:ss\").subtract(8, 'hours').format(\"YYYY-MM-DD hh:mm:ss\"));\r\n        //debugger;\r\n        console.log(\"local outageEndDate \", new Date(event));\r\n        \r\n\r\n      duration = (moment(state.outageEndDate, 'YYYY-MM-DD hh:mm:ss').toDate()) - new Date(event);\r\n      let outageEndDate = null;\r\n      if(duration < 0) {\r\n        outageEndDate = event;\r\n        duration = 0;\r\n       \r\n\r\n        setState({\r\n          ...state,\r\n          outageEndDate: outageEndDate\r\n        });\r\n      }\r\n      value = time;\r\n      \r\n    } \r\n    else if(name ==='outageEndDate') {\r\n      const time = moment(new Date(event)).format(\"YYYY-MM-DD hh:mm:ss\");\r\n      duration = new Date(event) - (moment(state.outageStartDate, 'YYYY-MM-DD hh:mm:ss').toDate())\r\n      value = time;\r\n    }\r\n    else if(value === null) {\r\n      value = event.target.value;\r\n    }\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n      duration: duration !== null ? `${Math.floor(duration/3600000)}hr ${(duration%3600000)/60000}mins` : state.duration\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={props.show}\r\n        onClose={props.handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Update Inventory</h2>\r\n          <p id=\"simple-modal-description\">Update Inventory Details</p>\r\n\r\n          <form className={classes.form} noValidate onSubmit=\"()=> false\">\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n               <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"fullName\"\r\n                  label=\"FULL NAME\"\r\n                  name=\"fullName\"\r\n                  autoComplete=\"fullName\"\r\n                  value={state.fullName}\r\n                  onChange={handleChange(\"fullName\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"USER NAME\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  value={state.username}\r\n                  onChange={handleChange(\"username\")}\r\n                />\r\n              </Grid>            \r\n              <Grid item xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"password\"\r\n                  label=\"PASSWORD\"\r\n                  name=\"password\"\r\n                  autoComplete=\"password\"\r\n                  type=\"password\"\r\n                  value={state.password}\r\n                  onChange={handleChange(\"password\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"flatNo\"\r\n                  label=\"FLAT NO\"\r\n                  name=\"flatNo\"\r\n                  autoComplete=\"flatNo\"\r\n                  value={state.flatNo}\r\n                  onChange={handleChange(\"flatNo\")}\r\n                />\r\n              </Grid>\r\n            \r\n            </Grid>\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"emailId\"\r\n                  label=\"EMAIL ID\"\r\n                  name=\"emailId\"\r\n                  autoComplete=\"emailId\"\r\n                  value={state.emailId}\r\n                  onChange={handleChange(\"emailId\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                 <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"mobile\"\r\n                  label=\"MOBILE\"\r\n                  name=\"mobile\"\r\n                  autoComplete=\"mobile\"\r\n                  value={state.mobile}\r\n                  onChange={handleChange(\"mobile\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                 <FormControl\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  className={classes.formControl}\r\n                >\r\n                  <InputLabel ref={inputLabel} id=\"type\">\r\n                    TYPE\r\n                  </InputLabel>\r\n\r\n                  <Select\r\n                    labelId=\"type\"\r\n                    id=\"type\"\r\n                    value={state.consoleInfo}\r\n                    onChange={handleChange(\"type\")}\r\n                    labelWidth={130}\r\n                    marginRight\r\n                  >\r\n                    <MenuItem value={\"OWNER\"}>OWNER</MenuItem>\r\n                    <MenuItem value={\"PRESIDENT\"}>PRESIDENT</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={4}>\r\n              <Grid item xs>\r\n              </Grid>\r\n              <Grid item xs>\r\n              </Grid>            \r\n              <Grid item xs>\r\n                             \r\n              </Grid>                \r\n              <Grid item xs>     \r\n              </Grid>  \r\n            </Grid>\r\n            <Grid container spacing={4}>           \r\n              <Grid item xs>\r\n                \r\n              </Grid>\r\n              <Grid item xs>\r\n                \r\n              </Grid>               \r\n              <Grid item xs>\r\n              </Grid>          \r\n              <Grid item xs>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={6}>\r\n              <Grid item xs />\r\n              <Grid item xs />\r\n              <Grid item xs />\r\n              <Grid item xs>\r\n                {loader && <CircularProgress className={classes.loader} />}\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button          \r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={onSubmit}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={props.handleClose}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}