{"ast":null,"code":"var _jsxFileName = \"/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/customToolbar/CustomToolbar.js\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst defaultToolbarStyles = {\n  iconButton: {}\n};\n\nclass CustomToolbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      this.props.displayAddMembers();\n    };\n\n    this.fetchData = () => {\n      fetch(\"......./suggestions/random\", {\n        method: \"GET\",\n        dataType: \"JSON\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      }).then(resp => {\n        return resp.json();\n      }).then(data => {\n        this.setState({\n          suggestion: data.suggestion\n        });\n      }).catch(error => {\n        console.log(error, \"catch the hoop\");\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      onClick: this.props.displayAddMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      className: classes.deleteIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withStyles(defaultToolbarStyles, {\n  name: \"CustomToolbar\"\n})(CustomToolbar);","map":{"version":3,"sources":["/Users/pmatta/Desktop/developer_personal/apartment-front-end/src/components/customToolbar/CustomToolbar.js"],"names":["React","IconButton","Tooltip","AddIcon","SaveIcon","EditIcon","withStyles","defaultToolbarStyles","iconButton","CustomToolbar","Component","handleClick","props","displayAddMembers","fetchData","fetch","method","dataType","headers","then","resp","json","data","setState","suggestion","catch","error","console","log","render","classes","deleteIcon","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA7B;;AAIA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAC1CC,WAD0C,GAC5B,MAAM;AAClB,WAAKC,KAAL,CAAWC,iBAAX;AACD,KAHyC;;AAAA,SAI1CC,SAJ0C,GAI9B,MAAM;AAClBC,MAAAA,KAAK,CAAC,4BAAD,EAA+B;AAClCC,QAAAA,MAAM,EAAE,KAD0B;AAElCC,QAAAA,QAAQ,EAAE,MAFwB;AAGlCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHyB,OAA/B,CAAL,CAOCC,IAPD,CAOOC,IAAD,IAAU;AACd,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OATD,EAUCF,IAVD,CAUOG,IAAD,IAAU;AACd,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEF,IAAI,CAACE;AAAnB,SAAd;AACD,OAZD,EAaCC,KAbD,CAaQC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,gBAAnB;AACD,OAfD;AAgBD,KArB2C;AAAA;;AAuB1CG,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKlB,KADlB,CACCkB,OADD;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEA,OAAO,CAACtB,UADrB;AAEE,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWC,iBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEiB,OAAO,CAACC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,CADF;AA4BD;;AAtDyC;;AAyD5C,eAAezB,UAAU,CAACC,oBAAD,EAAuB;AAAEyB,EAAAA,IAAI,EAAE;AAAR,CAAvB,CAAV,CACbvB,aADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst defaultToolbarStyles = {\r\n  iconButton: {}\r\n};\r\n\r\nclass CustomToolbar extends React.Component {\r\n  handleClick = () => {\r\n    this.props.displayAddMembers();\r\n  };\r\n  fetchData = () => {\r\n  fetch(\"......./suggestions/random\", {\r\n    method: \"GET\",\r\n    dataType: \"JSON\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json; charset=utf-8\",\r\n    }\r\n  })\r\n  .then((resp) => {\r\n    return resp.json()\r\n  }) \r\n  .then((data) => {\r\n    this.setState({ suggestion: data.suggestion })                    \r\n  })\r\n  .catch((error) => {\r\n    console.log(error, \"catch the hoop\")\r\n  })\r\n}\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Tooltip title={\"Add\"}>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            onClick={this.props.displayAddMembers}\r\n          >\r\n            <AddIcon className={classes.deleteIcon} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        {/*<Tooltip title={\"Edit\"}>\r\n          <IconButton\r\n            onClick={this.props.displayUpdateInventoryModal}\r\n            className={classes.iconButton}\r\n          >\r\n            <EditIcon className={classes.editIcon} />\r\n          </IconButton>\r\n        </Tooltip>*/}\r\n       {/* <Tooltip title={\"Import\"}>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            onClick={this.props.displayImportInventoryModal}\r\n          >\r\n            <SaveIcon className={classes.saveIcon} />\r\n          </IconButton>\r\n        </Tooltip>*/}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(defaultToolbarStyles, { name: \"CustomToolbar\" })(\r\n  CustomToolbar\r\n);\r\n"]},"metadata":{},"sourceType":"module"}